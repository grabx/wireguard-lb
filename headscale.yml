---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hs
  namespace: wg
  labels:
    app: hs
spec:
  replicas: 1
  serviceName: "nginx"
  selector:
    matchLabels:
      app: hs
  template:
    metadata:
      labels:
        app: hs
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        # - name: busybox
        #   image: busybox
        #   stdin: true
        #   stdinOnce: true
        #   tty: true
        #   resources: {}
        #   volumeMounts:
        #     - name: hs-data
        #       mountPath: /etc/headscale
        - name: hs
          resources: {}
          imagePullPolicy: Always
          image: headscale/headscale
          tty: true
          stdin: true
          command: 
          - headscale 
          - serve
          ports:
            - containerPort: 443
              name: web
            - containerPort: 9090
              name: metric
            - containerPort: 3478
              name: derp
            - containerPort: 80
              name: le
            - containerPort: 50443
              name: grpc
          volumeMounts:
            - name: hs-data
              mountPath: /etc/headscale

      volumes:
        - name: hs-data
          persistentVolumeClaim:
            claimName: hs-data

---
apiVersion: v1
kind: Service
metadata:
  name: hs-svco
  namespace: wg
  annotations:
    service.beta.kubernetes.io/azure-dns-label-name: headscaler4
  #  service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  #loadBalancerIP: 20.250.60.67
  ports:
  - name: web
    port: 443
    targetPort: web
  - name: metric
    port: 9090
    targetPort: metric
  - name: derp
    port: 3478
    targetPort: derp
  - name: le
    port: 80
    targetPort: le
  - name: grpc
    port: 50443
    targetPort: grpc
  selector:
    app: hs

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hs-data
  namespace: wg
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: managed-csi
  resources:
    requests:
      storage: 200Mi

# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: hs-ing
#   namespace: wg
# spec:
#   ingressClassName: nginxext
#   rules:
#   - host: hs-gui.regacloud.ch
#     http:
#       paths:
#       - backend:
#           service:
#             name: hs-gui-svc
#             port:
#               number: 8080
#         path: /
#         pathType: Prefix
#   tls:
#   - hosts:
#     - hs-gui.regacloud.ch
#     secretName: hs-secret

# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: hs-secret
#   namespace: wg
# data:
#   tls.crt: |
#     QmFnIEF0dHJpYnV0ZXMKICAgIGxvY2FsS2V5SUQ6IDAxIDAwIDAwIDAwIAogICAgZnJpZW5kbHlOYW1lOiAqLnJlZ2FjbG91ZC5jaCAyMDIzCnN1YmplY3Q9QyA9IENILCBMID0gWlxDM1xCQ3JpY2gsIE8gPSBTY2h3ZWl6ZXJpc2NoZSBSZXR0dW5nc2ZsdWd3YWNodCAoUmVnYSksIENOID0gKi5yZWdhY2xvdWQuY2gKaXNzdWVyPUMgPSBVUywgTyA9IERpZ2lDZXJ0IEluYywgQ04gPSBEaWdpQ2VydCBHbG9iYWwgRzIgVExTIFJTQSBTSEEyNTYgMjAyMCBDQTEKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUcxakNDQmI2Z0F3SUJBZ0lRQWdzQkliZ20wVWp5Q1hjYUUrTk1OREFOQmdrcWhraUc5dzBCQVFzRkFEQloKTVFzd0NRWURWUVFHRXdKVlV6RVZNQk1HQTFVRUNoTU1SR2xuYVVObGNuUWdTVzVqTVRNd01RWURWUVFERXlwRQphV2RwUTJWeWRDQkhiRzlpWVd3Z1J6SWdWRXhUSUZKVFFTQlRTRUV5TlRZZ01qQXlNQ0JEUVRFd0hoY05Nak13Ck5EQXpNREF3TURBd1doY05NalF3TkRBeU1qTTFPVFU1V2pCcU1Rc3dDUVlEVlFRR0V3SkRTREVRTUE0R0ExVUUKQnd3SFdzTzhjbWxqYURFd01DNEdBMVVFQ2hNblUyTm9kMlZwZW1WeWFYTmphR1VnVW1WMGRIVnVaM05tYkhWbgpkMkZqYUhRZ0tGSmxaMkVwTVJjd0ZRWURWUVFEREE0cUxuSmxaMkZqYkc5MVpDNWphRENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWlZT2pGeXJ0SjRIMG84Y3QvZzRGblpnSnRlYkFUNE9SS3YKcVZnQzdNY3A0VXNsME91UkVwOHFDQ0xUQ1JHTlY0U29EMFhxSGlFcUFHSkJtcTU1eDczNnQrVkFVWGZ4ckFJQwpHeXpRQ1MxN29uNHZ3ZnAvampZLzdJTDZ5bDhZQUMrc0U4aGFNQWU2K3RLQjNyWHJvb1d4VE1FWU83SUkyc0UrCjFtL2lxSHc3b3RqZGF3NkkxVFQvRk02cU5MWXQzT2NuUFZ0WEpjRzB6c2xuNjFTSHNmVm1TcWtiNzNuRStGVDEKdm8wbkFOczcyNzlnUU5FUFF2ekEydlFZU0JHYlV4eE1Md0ZhS20vYk12WnBObnZCajlaN014Q0NkbWFvbVkwOQo5K2xJMDE2M1hsSnRWSlRPcXVCbmMzZ1JsTkF3TVV5andNVDZQa09SOERpYTJtY2JBV1VDQXdFQUFhT0NBNGN3CmdnT0RNQjhHQTFVZEl3UVlNQmFBRkhTRmdNQm14OTgzM3MrOUtUZXFBeDIrN2MwWE1CMEdBMVVkRGdRV0JCUnoKTnEzREViMWsvWlpobHJ2OXcrSFNjTjJ1QlRBWkJnTlZIUkVFRWpBUWdnNHFMbkpsWjJGamJHOTFaQzVqYURBTwpCZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNSUdmCkJnTlZIUjhFZ1pjd2daUXdTS0JHb0VTR1FtaDBkSEE2THk5amNtd3pMbVJwWjJsalpYSjBMbU52YlM5RWFXZHAKUTJWeWRFZHNiMkpoYkVjeVZFeFRVbE5CVTBoQk1qVTJNakF5TUVOQk1TMHhMbU55YkRCSW9FYWdSSVpDYUhSMApjRG92TDJOeWJEUXVaR2xuYVdObGNuUXVZMjl0TDBScFoybERaWEowUjJ4dlltRnNSekpVVEZOU1UwRlRTRUV5Ck5UWXlNREl3UTBFeExURXVZM0pzTUQ0R0ExVWRJQVEzTURVd013WUdaNEVNQVFJQ01Da3dKd1lJS3dZQkJRVUgKQWdFV0cyaDBkSEE2THk5M2QzY3VaR2xuYVdObGNuUXVZMjl0TDBOUVV6Q0Jod1lJS3dZQkJRVUhBUUVFZXpCNQpNQ1FHQ0NzR0FRVUZCekFCaGhob2RIUndPaTh2YjJOemNDNWthV2RwWTJWeWRDNWpiMjB3VVFZSUt3WUJCUVVICk1BS0dSV2gwZEhBNkx5OWpZV05sY25SekxtUnBaMmxqWlhKMExtTnZiUzlFYVdkcFEyVnlkRWRzYjJKaGJFY3kKVkV4VFVsTkJVMGhCTWpVMk1qQXlNRU5CTVMweExtTnlkREFKQmdOVkhSTUVBakFBTUlJQmZnWUtLd1lCQkFIVwplUUlFQWdTQ0FXNEVnZ0ZxQVdnQWRnRHV6ZEJrMWRzYXpzVmN0NTIwelJPaU1vZEdmTHpzM3NOUlNGbEdjUisxCm13QUFBWWRHb3JaK0FBQUVBd0JITUVVQ0lGS1hzN0RTbEh3d1IzVFdaWUIvZk5MWVd4ZzBCelVRVzRSajRyYWwKVHF1OUFpRUFvVFVzSmRQNmtDcEs4OTlUOXBzSm5oNXF0dUdHaHpiNVBSb0x5UjhsZmR3QWRRQnoyWjZKRzB5VwplS0FnZlVlZDVyTEdITkJSWG5FWktveHJnQkI2d1hkeXRRQUFBWWRHb3JhVkFBQUVBd0JHTUVRQ0lBOElTK21KClZ4VHh0UGtPVzdEc3U1d2xMcVBUUkNhVlNjaldQck55bjd4WEFpQWNUclVpcmpYN3N3MW9UNWwzQktMREtack8KTlBNTWdtcDBOTThDSlJpOFpnQjNBRWl3NDJ2YXBrYzBEK1ZxQXZxZE1Pc2NVZ0hMVnQwc2dkbTd2NnM1MklSegpBQUFCaDBhaXRtZ0FBQVFEQUVnd1JnSWhBSXVDZjB0OWdmWkt3Vkg5dktSczJhczFmU21OOFpCRjJlWE1zUFd6CkEzaE5BaUVBbzBlSklna3J6SEh4NjhQbDQ5UzVGMDNVN0JJRnNVYjRXa01OSG1TVEFlTXdEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQU12cUp5K3ltNlF5eTJ0TC8yUWxzekl4R3p1U3I4bFFCWjBOOWxJMk9HbktBUE15SmZ3ZApNbHdvTmN6VWxzNmpRZW9NRkpHRWVDcnRja2NCQk5RRmJacnk4TlVjR1ZJYXVBdUpJUWRieWxhdnV5cmV1VVdOCjNjNndXTkY3WjhzbHNFeFJXeVV4eXJreXZDcW40bEd5djJrQzMyU212V0I1TjdoSnIwL0Frd0VXZlBaUks0bGUKSkFBR2ltSHF1dVpDaGN6TW9HUndlQUNoZTNNNFBtVjFRV0xYOENxY1g2ZXc0bEtYcWg3bFBmakFxOTB0MUdlNQpTcVptbHg5d050VlNHWFM2MUtaVHBiNWI5ejYrY2o2MVFldGYvWTNia3crcThTNHN4TG8xNHYydVJTYnlJQkN2CnJ0UDZkdGFKSjFkNU9xVkl6NFJyT2lFOS9NblljSjF2Qk5rPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
#   tls.key: |
#     LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV3QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktvd2dnU21BZ0VBQW9JQkFRREltRG94Y3E3U2VCOUsKUEhMZjRPQloyWUNiWG13RStEa1NyNmxZQXV6SEtlRkxKZERya1JLZktnZ2kwd2tSalZlRXFBOUY2aDRoS2dCaQpRWnF1ZWNlOStyZmxRRkYzOGF3Q0Foc3MwQWt0ZTZKK0w4SDZmNDQyUCt5QytzcGZHQUF2ckJQSVdqQUh1dnJTCmdkNjE2NktGc1V6QkdEdXlDTnJCUHRadjRxaDhPNkxZM1dzT2lOVTAveFRPcWpTMkxkem5KejFiVnlYQnRNN0oKWit0VWg3SDFaa3FwRys5NXhQaFU5YjZOSndEYk85dS9ZRURSRDBMOHdOcjBHRWdSbTFNY1RDOEJXaXB2MnpMMgphVFo3d1kvV2V6TVFnblptcUptTlBmZnBTTk5ldDE1U2JWU1V6cXJnWjNONEVaVFFNREZNbzhERStqNURrZkE0Cm10cG5Hd0ZsQWdNQkFBRUNnZ0VCQUw2alRjcm92eFR2YkcxVS9hZWZSQmlnQ1FXZnV2RU9KcytIZWwxV2lrak4KbUh1ZXVPcm51TmJqVDFBcFdCa0NSd2FmNGNRRU9CWTBvS0RBMEl5NDJBZkpXelBZNkpRaGJlT0t0T0RsNVpNQQpTUEc3MlpLRDMxZlhjS01hVFhJS2tVSzlPeC9SOW91aU8vWUx6dWo5eER0aXdSdFNPSWwrdU1lblBJeWcwSmNmCk4wVGJleERJV01GcVVhWjhrYjNDazFYRU1yV3g1SnIveUFPSzAraW4xK2IxbnFVdndlVXFOem9tZS9PNWhicmMKYTRSK054WjVEYUdyajlOd1FVciszRGxKZ09VbDRSbTViOGNxRzUxY0U1enhrNGJXemVTZHEzQ0xsUU4ra0loeAp1QVBueVIzZmMxbzM2eFg1TGg2SlVBSjdsNWZjTEJFYUhGZDgxOFpyemhFQ2dZRUEzSVErM2wwckhLY01yeDFKCnlYTWYyN0FiNzJla2wyaEo4ZVlrdWM3MVBta1haczhGcFk2cWR1SWZFM0U4RmRrTnZNWURvZGpnSVh4QjNIa2oKUzVjaURYOFhBQjJ4Z1pFQ2FPV1RPdm40b2xaM0tmRG56OUgzVWVxSnBJN2tvaUtMLzROTnFSbDhwSFFTaWFGcAo1RFlmaCtHK3gxcXFLWUpvL2pOdzBwV2RtRGNDZ1lFQTZOOVY3a2pTUTNqZm9DdG9ZQnNBNmRGOXV3dWlBZE53CmlmcStwbG96eERINTNqTi9zZElRVDR5WUlxUWo1Vm51c3ZBTWxyclRqaGxLeWM3YXFWY2IzL1c4QlpROC92VE4KSko2TVNJU1k5MEwvdmg1azg3VUVWcSt1SXk5dTZXQlVlSE00YUxtbExYOEM3eVFmZ3BvQWJKcVREcjNFY3hIOQprWTRwSVJ0NXJVTUNnWUVBZ0t6aWlwclBKMThLOWJ3ZmJGK3pQVnhjVUt5bnpIbmNmRDBSUFNOWTA5dzYvWkRiCitLbHhLd0h6cEVLMUR3S2pFMzV3YkNiRFVvYlJYN2VJTXZtenN6QnYyVzk2UHVMQkJ6aS9XdkMyZHZRQmdRWEUKSHU2a1pMWjVMdjc2eHVsbHkrbHdqYllEbDJycnprZlVKSWk0aVcvZkJURVFqanc4eStoMGMwMCtzcTBDZ1lFQQpyTXpsSCsrTGp5UEhsVHdBdEtmMUVvd3daemFubmdFL0ZqUXBlcG1lcGl5TGhKWGtZSmhISURCc3grL1M3eUsvCjNLb0NQV3NmQnVlL3RtYTNuVWNWV1Nnb3dGOFNzQUlKbysyK25TVS91T05Qa00xUERnUzUxbldBbTMxY0tQTWgKVzB2c2hOR1ZQMkJyVmZjUkpzR09KUWpDclFLbUh0a3Z0dTJ0bVhLZzVLOENnWUVBcnU5WmRoRHJka3hvYUozSwpBemh4elc0NEgyL1o3L0UwMUlPeS80d0I4bDc4YkU5SFR4SXRQV2hUV20yWmlwZTlGemdtTDIyWmVTbnJ3bWlVCktzUzhEK3U0aXhydEZsQ3JCOWJ1QXZvOUY1K3VmUGtFUGp2a2tqVDAxRVE0SXU2MUgzbkFsSXFoRmpzRHlMZ2UKYksrZ2pVeXZnckpTaitpZ0NNN21NRXhTbWtvPQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
# type: kubernetes.io/tls